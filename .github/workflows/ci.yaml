name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'
          check-latest: true

      - name: Verify dependencies
        run: go mod verify

      - name: Run go fmt
        run: go fmt ./...

      - name: Run go vet
        run: go vet ./...

      - name: Run tests with coverage
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
        
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.txt
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.txt
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
          
      - name: Generate HTML coverage report
        run: |
          go install github.com/axw/gocov/gocov@latest
          go install github.com/matm/gocov-html/cmd/gocov-html@latest
          gocov convert coverage.txt > coverage.json
          gocov-html coverage.json > coverage.html
          
      - name: Upload HTML coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-report
          path: coverage.html

  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: cinaq/pv-labels-operator:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
